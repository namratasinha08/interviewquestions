1.What is Design Pattern?

A.Design patterns is a solution design.
B.Design patterns is a software design. 
C.Design patterns are useful to create a toolkit of design. 
D.Design patterns are a toolkit of tried and tested solutions to common problems in software design. 

Answer: D

2.Creational design pattern can be defined as?

A.Creational design patterns provide solution to instantiate      an object in the best possible way for specific situations.
B.Creational design patterns is used to create interfaces.
C.Creational design patterns is used to create classes and      objects. 
D.Creational design is used to instantiate an object

Answer: A

3.Structural design patterns can be defined as?

A.Structural design patterns provide different ways to create    a class structure by using inheritance and composition to      create a large object from small objects.
B.Structural design patterns is used to create an interface      object.
C.Structural design patterns provide ways to create a class      structure by using polymorphism.
D.Structural design patterns provide different ways to create a class structure by using aggregation and encapsulation to create a large object from small objects.

Answer:A

4.Behavioral design patterns can be defined as?

A.Behavioral design patterns provide solution for the better interaction between interfaces.
B.Behavioral design patterns provide solution for the better interaction between objects and how to provide loose coupling and flexibility to extend easily.
C.Behavioral design patterns provide solution for the better interaction between classes.
D.Behavioral design patterns provide solution for the better interaction between objects and how to provide tight coupling and flexibility to extend easily.

Answer:B


5.Singleton pattern can be described as?
A.Singleton pattern restricts the instantiation of a class and ensures that only one instance of the class exists in the Java virtual machine. 
B.Singleton pattern used to create two instance of the class.
C.Singleton pattern  ensures that only has no instance of the class.
D.Singleton pattern is used to create class.

Answer:A

6.Factory pattern can be defined as?
A.Factory pattern is used when we have a superclass with multiple sub-classes and based on output, we need to return one of the sub-class.
B.Factory pattern is used when we have a superclass with multiple sub-classes and based on input, we need to return one of the sub-class.
C.Factory pattern is used when we have a subclass with multiple superclasses and based on input, we need to return one of the sub-class.
D.Factory pattern is used when we have a subclass with multiple super classes and based on input, we need to return one of the sub-class.

Answer:B


7.Adapter pattern is described as?
A.Adapter pattern is one of the structural design patterns and it’s used so that two related classes can work together. 
B.Adapter pattern is one of the structural design patterns and it’s used so that two related objects can work together. 
C.Adapter pattern is one of the structural design patterns and it’s used so that two unrelated interfaces can work together. 
D.Adapter pattern is one of the structural design patterns and it’s used so that two related interfaces can work together. 

Answer:C

8.Composite pattern is defined as?
A.Composite pattern is one of the Structural design patterns and is used when we have to represent a no hierarchy.
B.Composite pattern is one of the Structural design patterns and is used when we don't want to represent a part-whole hierarchy.
C.Composite pattern is one of the Structural design patterns and is used when we have to represent a part-whole hierarchy.
D.Composite pattern is one of the Structural design patterns and is used when we have to create objects.

Answer:C

9.What is Prototype Pattern?

A.Prototype Pattern reduces the need of sub-classing.It hides complexities of deleting objects.
B.Prototype Pattern reduces the need of sub-classing.It hides complexities of creating objects.
C.Prototype Pattern increases the need of sub-classing.It hides complexities of creating objects.
D.Prototype Pattern reduces the need of creating super classes.It hides complexities of creating objects.

Answer:B

10.What is Composite pattern?

A.Component declares the interface for objects in composition.It implements default behavior for the interface common to only one class.
B.Component declares the interface for objects in composition.It implements default behavior for the interface common to all classes as appropriate.
C.Component declares the classes for objects in composition.It implements default behavior for the interface common to all classes as appropriate.
D.Component declares the interface for objects in composition.It implements default behavior for the classes common to all interfaces as appropriate.

Answer:B


















