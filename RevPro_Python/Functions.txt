// Functions Questions

#P1
##EASY
###BC
1. What is the output of the following code?

def my_func()
   x = 10
   print("Value :",x)
x = 20
my_func()
print("Value :",x)


A. 10
B. 20
C. Syntax Error
D. Runtime Error

Answer: C 

Explanation: Here, we get Syntax error because the correct syntax is def function_name(): 



#P1
##EASY
###BC
2. What is the output of the following code?

def outer_function(a, b):
    def inner_function(c, d):
        return c + d
    return inner_function(a, b)
    return a
Output = outer_function(45, 10)
print(Output)


A. 55
B. (45,10)
C. 45
D. Syntax Error

Answer: A

Explanation: Adding multiple return statements doesn’t perform any task. Once function execution is encountered with the return statement, it stops the execution by returning whatever is specified by the return statement.


#P1
##EASY
###BC
3. Predict the output of the following code.

def func(x):
    return 100
print(func(999))


A. 999
B. 100
C. 1
D. Error

Answer: B


#P1
##EASY
###BC
4. What is the output of the following code?

def salary(**kwargs):
    for i in kwargs:
        print(i)
salary(emp="Anto", salary=10000)


A. Anto
B. Anto
   10000
C. emp 
   salary
D. 10000
   Anto

Answer: C

Explanation: To accept Variable Length of Keyword Arguments, i.e., To create functions that take 'n' number of Keyword arguments, we use **kwargs (prefix a parameter name with a double asterisk ** ).

keyword arguments: display(emp="Anto", salary=10000)

This **kwargs collects all passed arguments into a new dictionary, where the argument names are the keys, and their values are the key’s values. So, to get the values, we need to iterate the kwargs dictionary.


#P1
##EASY
###BC
5. What is the output of the following code?

def func():
    name = "jack"
    name = "henry"
    print("Hello!", name)
func()


A. Hello! jack
B. Hello! henry
C. Hello! jack
   Hello! henry
D. Error

Answer: B


#P1
##EASY
###BC
6. What is the output of following code snippet?

def func(val1, val2=2, val3=7, val4=1):
    return val1**val2**val3
print(func(val2=2, val1=2, val3=4))

A. 65536
B. 32768
C. Type Error
D. Name Error   

Answer: A


#P1
##EASY
###BC
7. What is the output of following code snippet?

l=[1, -2, -3, 4, 5]
def f1(x):
    return x<2
m1=filter(f1, l)
print(list(m1))

A. [1, 4, 5 ]
B. Error
C. [-2, -3]
D. [1, -2, -3]

Answer: D

Explanation: The code shown above returns only those elements from the list, which are less than 2. The functional programming tool used to achieve this operation is filter. Hence the output of the code is:[1, -2, -3].


#P1
##EASY
###BC
8. Choose the correct function declaration of fun1() so that we can execute the following function call successfully.

fun1(25, 75, 55)
fun1(10, 20)

A. def func1(**kwargs)
B. No,it is not possible
C. def fun1(args*)
D. def fun1(*data)

Answer: D

Explanation: To accept multiple values or if the number of arguments is unknown, we can add the * before the parameter name to accept arbitrary arguments. i.e., To accept Variable Length of Positional Arguments. To create functions that take 'n' number of Positional arguments, we use *args(prefix a parameter name with an asterisk *).


#P1
##EASY
###BC
9. What is the output of following code snippet?

l=[1, -2, -3, 4, 5]
def f1(x):
    return x<-1
m1=map(f1, l)
print(list(m1))

A. [False, False, False, False, False]
B. [False, True, True, False, False]
C. [True, False, False, True, True]
D. [True, True, True, True, True]

Answer: B

Explanation: This code shown returns a list which contains True if the corresponding element of the list is less than -1, and false if the corresponding element is greater than -1. Hence the output of the code shown above: [False, True, True, False, False].


#P2
##EASY
###BC
10. Which of the following statement holds true about call by value?

A. A variable itself is passed.
B. Change in the copy of variable modify the original value of variable.
C. Default calling-primitive type are passed using the call_by_value.
D. all the above

Answer: C


#P2
##EASY
###BC
11. Which of the following statement holds true about call by reference?

A. A variable itself is passed.
B. Change in the copy of variable doesn't modify the original value of variable.
C. Default calling-Objects are implicitly passed using call_by_reference.
D. Both A. and C.

Answer: D


12. What abs() function returns in python?

A. returns true when all elements in iterable is true
B. deletes attribute from the object
C. returns absolute value of a number
D. runs code within program

Answer: C


#P2
##EASY
###BC
13. What all() function returns in python?

A. returns true when all elements in iterable is true
B. deletes attribute from the object
C. returns absolute value of a number
D. runs code within program

Answer: B


#P2
##EASY
###TF
14. bytes() is a Built-in function in python 

A. True
C. False

Answer: A


