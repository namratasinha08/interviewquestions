#P1
##EASY
###BC
1. A method of functional Interface is 

A. Abstraction
B. Lambda Expression
C. Method Reference
D. All the above

Answer: C

#P1
##EASY
###TF
2. We use a method reference instead of a lambda expressison

A. True
B. False
    
Answer: A 


#P1
##EASY
###BC
3. Which is not the type of Method References?

A. Reference to a static method.
B. Reference to an instance method.
C. Reference to a constructor
D. Reference to a object.

Answer: D

#IGNORe
4. Which is the syntax for referring to a static method?

A. ContainingClass::staticMethodName
B. ContainingObject::staticMethodName
C. ContainingClass::staticObjectName
D. ContainingClass::staticClassName

Answer: A 
#
5. Can we refer to the static method by calling its object?

A. Yes
B. No

Answer: B 
Explanation: we can only refer to the static method by calling its name with the class where it resides.

6.  containingObject::instanceMethodName is the syntax for Reference to an ____ method of a particular object.

A. Static
B. Final
C. instance
D. None of the above

Answer: C 

7. Which is the syntax for Reference to an instance method of an arbitrary object of a particular type?

    A. ContainingClass::staticMethodName
    B. containingObject::instanceMethodName
    C. ContainingType::methodName
    D. ContainingClass::staticClassName

Answer: C 

8. ClassName::new is the syntax for Reference to a __________.

    A. class 
    B. instance method
    C. Static method
    D. constructor

Answer: D 

9. ____ and ______ are the parts of the method reference.

    A. variable and method 
    B. class/object and method/constructor.
    C. class and object 
    D. method and constructor.

Answer: B 
 
10. Can we pass additional parameters in method reference.

    A. Yes
    B. NO 

Answer: B 

11. Which line is used to print all the elements in the list using method reference?

    A. list.forEach(System.out::println);  
    B. list.for(System.out::println); 
    C. arraylist.forEach(System.out::println);  
    D. arraylist.Each(System.out::println); 

Answer: A 
Explanation: Using the forEach method to display the elements one by one in the list.


12. Which one will be the output of the following code.
import java.io.*;
import java.util.*;
public class MethodReference{
    public static void main(String[] args)
    {
        List<String> bookList = new ArrayList<>();
        bookList .add("Java Programming");
        bookList .add("Data Strcutures and Alogrithms");
        bookList .add("Python Programming");
        Collections.sort(bookList ,String::compareToIgnoreCase);
        bookList .forEach(System.out::println);
    }
}

    A. Data Structures and Alogrithms<br>
       Java Programming<br>
       Python Programming  
    B. Python Programming<br>
       Data Structures and Alogrithms<br>
       Java Programming
    C. Java Programming<br>
       Data Structures and Alogrithms<br>
       Python Programming 
    D. Compile time error

Answer: A 
Explanation: This is an example of Reference to an instance method of an arbitrary object of a particular type.
             First, it will sort the list and apply compareToIgnoreCase to return the result.


13. What should be the code in line 9  to get the result "Hello, this is a static method." using a reference to the static methods?
interface Sample{  
    void print();  
}  
public class MethodReference {  
    public static void printhello(){  
        System.out.println("Hello, this is static method.");  
    }  
    public static void main(String[] args) {  
        // Line 9
        sample.print();  
    }  
} 

    A. Sample sample = MethodReference::printhello; 
    B. Sample sample = MethodReference;  
    C. Sample sample = MethodReference.printhello;  
    D. asample.printhello(); ; 

Answer: A 
Explanation: Here the static method reference printhello() refers to its functional method print() in the interface Sample.